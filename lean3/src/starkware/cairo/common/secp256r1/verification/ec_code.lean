/-
File: ec_code.lean

Autogenerated file.
-/
import starkware.cairo.lean.semantics.soundness.hoare

variables {F : Type} [field F] [decidable_eq F]

/- function starkware.cairo.common.alloc.alloc code definition -/

def starkware.cairo.common.alloc.code_alloc : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  1,
  'ret[].to_nat
]

/- function starkware.cairo.common.math.assert_nn code definition -/

def starkware.cairo.common.math.code_assert_nn : list F := [
  'assert_eq[op0:='op0[fp+ -4], 'dst[fp+ -3] === 'res['op1[op0]]].to_nat,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  1,
  'ret[].to_nat
]

/- function starkware.cairo.common.math.assert_le code definition -/

def starkware.cairo.common.math.code_assert_le : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -3] === 'res[op0+ 'op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -6,
  'ret[].to_nat
]

/- function starkware.cairo.common.math.assert_nn_le code definition -/

def starkware.cairo.common.math.code_assert_nn_le : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -11,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -11,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.bigint.nondet_bigint3 code definition -/

def starkware.cairo.common.secp256r1.bigint.code_nondet_bigint3 : list F := [
  'assert_eq[op0:='op0[ap+ 5], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  340282366920783720958463934897405820928,
  'assert_eq[op0:='op0[ap+ 3], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0]]].to_nat,
  'assert_eq[op0:='op0[ap+ 4], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  340282366920919120650260773364972912640,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 1]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  5,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res['op1[op0+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res['op1[op0+ -2]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -3], 'dst[ap] === 'res['op1[op0+ -1]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.unreduced_mul code definition -/

def starkware.cairo.common.secp256r1.field.code_unreduced_mul : list F := [
  'assert_eq[op0:='op0[fp+ -8], 'dst[ap] === 'res[op0* 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -8], 'dst[ap] === 'res[op0* 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -7], 'dst[ap] === 'res[op0* 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -8], 'dst[ap] === 'res[op0* 'op1[fp+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -7], 'dst[ap] === 'res[op0* 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -6], 'dst[ap] === 'res[op0* 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -7], 'dst[ap] === 'res[op0* 'op1[fp+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -6], 'dst[ap] === 'res[op0* 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -6], 'dst[ap] === 'res[op0* 'op1[fp+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  4,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -15], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  72057594037927936,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -4096,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -17], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -73786976294838206460,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  18014398505287680,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -13]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -17], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -75557863725914323423232,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -15]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -13], 'dst[ap] === 'res[op0+ 'op1[ap+ -11]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -9], 'dst[ap] === 'res[op0+ 'op1[ap+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -5], 'dst[ap] === 'res[op0+ 'op1[ap+ -3]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.unreduced_sqr code definition -/

def starkware.cairo.common.secp256r1.field.code_unreduced_sqr : list F := [
  'assert_eq[op0:='op0[fp+ -5], 'dst[ap] === 'res[op0+ 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0* 'op1[fp+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -5], 'dst[ap] === 'res[op0* 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -3], 'dst[ap] === 'res[op0* 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0* 'op1[ap+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0* 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -6], 'dst[ap] === 'res[op0+ 'op1[ap+ -6]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0* 'op1[fp+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  4,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -9], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  72057594037927936,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -4096,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -13], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -73786976294838206460,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  18014398505287680,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -13]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -15], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -75557863725914323423232,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -15]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -13], 'dst[ap] === 'res[op0+ 'op1[ap+ -11]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -9], 'dst[ap] === 'res[op0+ 'op1[ap+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -5], 'dst[ap] === 'res[op0+ 'op1[ap+ -3]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.assert_165_bit code definition -/

def starkware.cairo.common.secp256r1.field.code_assert_165_bit : list F := [
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res['op1[op0+ 1]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  340282366920938463463374607294329257984,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap+ -1] === 'res['op1[op0+ 2]]].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  340282366920938463463374607431768211456,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[fp+ -3] === 'res[op0+ 'op1[ap+ -1]]].to_nat,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  3,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.verify_zero code definition -/

def starkware.cairo.common.secp256r1.field.code_verify_zero : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  1,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  23384026197294446691258957323460528314494920687616,
  'call_rel['op1[imm]].to_nat,
  -16,
  'assert_eq[op0:='op0[fp+ -5], 'dst[ap] === 'res[op0+ 'op1[fp]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  -46768052394588894761721767695234645457402928824320,
  'assert_eq['dst[ap] === 'res['op1[ap+ -3]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  23384026197294446691258957323460528314494920687616,
  'call_rel['op1[imm]].to_nat,
  -24,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  -1024,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[ap+ -12]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  -46768052394588894761721767695234645457402928824320,
  'assert_eq['dst[ap] === 'res['op1[ap+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  23384026197294446691258957323460528314494920687616,
  'call_rel['op1[imm]].to_nat,
  -35,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  4503599626321920,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  19342813113834066795298816,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -1] === 'res[op0+ 'op1[ap+ -12]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res[op0+ 'op1[ap+ -3]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.is_zero code definition -/

def starkware.cairo.common.secp256r1.field.code_is_zero : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  1,
  'jnz_rel['op1[imm], 'dst[ap+ -1]].to_nat,
  4,
  'jmp_rel['op1[imm]].to_nat,
  '[#nz 11],
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -44,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  1,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -146,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -141,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -4], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -1,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -65,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.reduce code definition -/

def starkware.cairo.common.secp256r1.field.code_reduce : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -167,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -5] === 'res[op0+ 'op1[ap+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -4] === 'res[op0+ 'op1[ap+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -3] === 'res[op0+ 'op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -77,
  'assert_eq['dst[ap] === 'res['op1[ap+ -47]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -47]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -47]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.field.validate_reduced_field_element code definition -/

def starkware.cairo.common.secp256r1.field.code_validate_reduced_field_element : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  19342813109330467168976896,
  'call_rel['op1[imm]].to_nat,
  -192,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  77371252455336267181195263,
  'call_rel['op1[imm]].to_nat,
  -197,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  77371252455336267181195263,
  'call_rel['op1[imm]].to_nat,
  -202,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -19342813109330467168976896,
  'jnz_rel['op1[imm], 'dst[ap+ -1]].to_nat,
  20,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -1023,
  'jnz_rel['op1[imm], 'dst[ap+ -1]].to_nat,
  9,
  'assert_eq['dst[ap] === 'res['op1[ap+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  77371252455336267181195262,
  'call_rel['op1[imm]].to_nat,
  -216,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  1022,
  'call_rel['op1[imm]].to_nat,
  -223,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -2]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.compute_doubling_slope code definition -/

def code_compute_doubling_slope : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -220,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -174,
  'assert_eq['dst[ap] === 'res['op1[ap+ -35]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -35]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -35]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -220,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -43]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -3,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -47]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -50]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -88]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -12] === 'res[op0+ 'op1[ap+ -10]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -9] === 'res[op0+ 'op1[ap+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -6] === 'res[op0+ 'op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -163,
  'assert_eq['dst[ap] === 'res['op1[ap+ -131]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -131]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -131]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.compute_slope code definition -/

def code_compute_slope : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -15]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -266,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -14] === 'res[op0+ 'op1[fp+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -13] === 'res[op0+ 'op1[fp+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -12] === 'res[op0+ 'op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -261,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -11]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -10]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -46]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -4], 'dst[ap] === 'res[op0+ 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -4], 'dst[ap] === 'res[op0+ 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -4], 'dst[ap] === 'res[op0+ 'op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -187,
  'assert_eq['dst[ap] === 'res['op1[ap+ -89]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -89]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -89]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.ec_double code definition -/

def code_ec_double : list F := [
  'jnz_rel['op1[imm], 'dst[fp+ -8]].to_nat,
  14,
  'jnz_rel['op1[imm], 'dst[fp+ -7]].to_nat,
  12,
  'jnz_rel['op1[imm], 'dst[fp+ -6]].to_nat,
  10,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -91,
  'call_rel['op1[imm]].to_nat,
  -261,
  'assert_eq['dst[ap] === 'res['op1[ap+ -33]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -315,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -318,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -23] === 'res[op0+ 'op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -25] === 'res[op0+ 'op1[ap+ -15]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -27] === 'res[op0+ 'op1[ap+ -17]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -10] === 'res[op0+ 'op1[ap+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -8] === 'res[op0+ 'op1[ap+ -6]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -6] === 'res[op0+ 'op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -240,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -8] === 'res[op0+ 'op1[ap+ -66]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -7] === 'res[op0+ 'op1[ap+ -66]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -6] === 'res[op0+ 'op1[ap+ -66]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -108]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -108]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -108]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -331,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[ap+ -99]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[ap+ -99]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[ap+ -99]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -257,
  'assert_eq['dst[ap] === 'res['op1[ap+ -152]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -152]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -152]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -145]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -145]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -145]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.fast_ec_add code definition -/

def code_fast_ec_add : list F := [
  'jnz_rel['op1[imm], 'dst[fp+ -14]].to_nat,
  14,
  'jnz_rel['op1[imm], 'dst[fp+ -13]].to_nat,
  12,
  'jnz_rel['op1[imm], 'dst[fp+ -12]].to_nat,
  10,
  'assert_eq['dst[ap] === 'res['op1[fp+ -15]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'ret[].to_nat,
  'jnz_rel['op1[imm], 'dst[fp+ -8]].to_nat,
  14,
  'jnz_rel['op1[imm], 'dst[fp+ -7]].to_nat,
  12,
  'jnz_rel['op1[imm], 'dst[fp+ -6]].to_nat,
  10,
  'assert_eq['dst[ap] === 'res['op1[fp+ -15]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -14]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -15]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -14]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -138,
  'call_rel['op1[imm]].to_nat,
  -354,
  'assert_eq['dst[ap] === 'res['op1[ap+ -33]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -408,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -411,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -23] === 'res[op0+ 'op1[ap+ -13]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -1] === 'res[op0+ 'op1[fp+ -14]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -24] === 'res[op0+ 'op1[ap+ -14]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -1] === 'res[op0+ 'op1[fp+ -13]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -25] === 'res[op0+ 'op1[ap+ -15]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -1] === 'res[op0+ 'op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -6] === 'res[op0+ 'op1[fp+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -5] === 'res[op0+ 'op1[fp+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[fp+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -327,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -14] === 'res[op0+ 'op1[ap+ -63]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -13] === 'res[op0+ 'op1[ap+ -63]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -12] === 'res[op0+ 'op1[ap+ -63]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -105]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -105]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -105]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -418,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -11]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -10]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -3] === 'res[op0+ 'op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[ap+ -96]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[ap+ -96]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[ap+ -96]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -344,
  'assert_eq['dst[ap] === 'res['op1[ap+ -149]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -149]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -149]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -142]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -142]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -142]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.ec_add code definition -/

def code_ec_add : list F := [
  'assert_eq['dst[ap] === 'res['op1[fp+ -15]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -14] === 'res[op0+ 'op1[fp+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -13] === 'res[op0+ 'op1[fp+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[fp+ -12] === 'res[op0+ 'op1[fp+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -323,
  'jnz_rel['op1[imm], 'dst[ap+ -1]].to_nat,
  18,
  'assert_eq['dst[ap] === 'res['op1[ap+ -2]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -14]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -108,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -2]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -10], 'dst[ap] === 'res[op0+ 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -9], 'dst[ap] === 'res[op0+ 'op1[fp+ -3]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -347,
  'jnz_rel['op1[imm], 'dst[ap+ -1]].to_nat,
  12,
  'assert_eq['dst[ap] === 'res['op1[ap+ -2]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -14]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -199,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -2]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.ec_mul_inner code definition -/

def code_ec_mul_inner : list F := [
  'jnz_rel['op1[imm], 'dst[fp+ -3]].to_nat,
  24,
  'assert_eq['dst[fp+ -4] === 'res['op1[imm]]].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'ret[].to_nat,
  'ap+=['res['op1[imm]]].to_nat,
  6,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -249,
  'jnz_rel['op1[imm], 'dst[ap];ap++].to_nat,
  16,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  -1809251394333065606848661391547535052811553607665798349986546028067936010240,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -1,
  'call_rel['op1[imm]].to_nat,
  -48,
  'ret[].to_nat,
  'assert_eq[op0:='op0[fp+ -4], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -1,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -8], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  -1809251394333065606848661391547535052811553607665798349986546028067936010240,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -1,
  'call_rel['op1[imm]].to_nat,
  -64,
  'assert_eq['dst[fp] === 'res['op1[ap+ -12]]].to_nat,
  'assert_eq['dst[fp+ 1] === 'res['op1[ap+ -11]]].to_nat,
  'assert_eq['dst[fp+ 2] === 'res['op1[ap+ -10]]].to_nat,
  'assert_eq['dst[fp+ 3] === 'res['op1[ap+ -9]]].to_nat,
  'assert_eq['dst[fp+ 4] === 'res['op1[ap+ -8]]].to_nat,
  'assert_eq['dst[fp+ 5] === 'res['op1[ap+ -7]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -228,
  'assert_eq['dst[ap] === 'res['op1[ap+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 2]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.ec_mul code definition -/

def code_ec_mul : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  18,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  86,
  'call_rel['op1[imm]].to_nat,
  -113,
  'assert_eq['dst[fp] === 'res['op1[ap+ -6]]].to_nat,
  'assert_eq['dst[fp+ 1] === 'res['op1[ap+ -5]]].to_nat,
  'assert_eq['dst[fp+ 2] === 'res['op1[ap+ -4]]].to_nat,
  'assert_eq['dst[fp+ 3] === 'res['op1[ap+ -3]]].to_nat,
  'assert_eq['dst[fp+ 4] === 'res['op1[ap+ -2]]].to_nat,
  'assert_eq['dst[fp+ 5] === 'res['op1[ap+ -1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  86,
  'call_rel['op1[imm]].to_nat,
  -131,
  'assert_eq['dst[fp+ 6] === 'res['op1[ap+ -6]]].to_nat,
  'assert_eq['dst[fp+ 7] === 'res['op1[ap+ -5]]].to_nat,
  'assert_eq['dst[fp+ 8] === 'res['op1[ap+ -4]]].to_nat,
  'assert_eq['dst[fp+ 9] === 'res['op1[ap+ -3]]].to_nat,
  'assert_eq['dst[fp+ 10] === 'res['op1[ap+ -2]]].to_nat,
  'assert_eq['dst[fp+ 11] === 'res['op1[ap+ -1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  84,
  'call_rel['op1[imm]].to_nat,
  -149,
  'assert_eq['dst[fp+ 12] === 'res['op1[ap+ -6]]].to_nat,
  'assert_eq['dst[fp+ 13] === 'res['op1[ap+ -5]]].to_nat,
  'assert_eq['dst[fp+ 14] === 'res['op1[ap+ -4]]].to_nat,
  'assert_eq['dst[fp+ 15] === 'res['op1[ap+ -3]]].to_nat,
  'assert_eq['dst[fp+ 16] === 'res['op1[ap+ -2]]].to_nat,
  'assert_eq['dst[fp+ 17] === 'res['op1[ap+ -1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 2]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 11]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -226,
  'assert_eq['dst[ap] === 'res['op1[fp+ 12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 13]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 14]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 15]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 16]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 17]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -234,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.build_ec_mul_table code definition -/

def code_build_ec_mul_table : list F := [
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 2]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 3]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 4]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 5]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -9] === 'res['op1[op0+ 6]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -8] === 'res['op1[op0+ 7]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -7] === 'res['op1[op0+ 8]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -6] === 'res['op1[op0+ 9]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -5] === 'res['op1[op0+ 10]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -4] === 'res['op1[op0+ 11]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -688,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 12]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 13]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 14]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 15]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 16]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 17]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -629,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 18]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 19]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 20]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 21]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 22]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 23]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -643,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 24]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 25]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 26]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 27]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 28]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 29]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -657,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 30]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 31]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 32]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 33]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 34]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 35]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -671,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 36]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 37]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 38]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 39]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 40]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 41]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -685,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 42]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 43]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 44]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 45]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 46]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 47]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -699,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 48]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 49]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 50]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 51]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 52]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 53]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -713,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 54]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 55]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 56]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 57]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 58]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 59]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -727,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 60]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 61]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 62]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 63]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 64]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 65]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -741,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 66]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 67]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 68]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 69]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 70]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 71]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -755,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 72]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 73]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 74]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 75]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 76]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 77]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -769,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 78]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 79]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 80]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 81]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 82]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 83]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -783,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 84]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 85]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 86]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 87]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 88]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 89]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -797,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -6] === 'res['op1[op0+ 90]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -5] === 'res['op1[op0+ 91]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -4] === 'res['op1[op0+ 92]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -3] === 'res['op1[op0+ 93]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -2] === 'res['op1[op0+ 94]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap+ -1] === 'res['op1[op0+ 95]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -7]];ap++].to_nat,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.fast_ec_mul_inner code definition -/

def code_fast_ec_mul_inner : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  1,
  'jnz_rel['op1[imm], 'dst[fp+ -3]].to_nat,
  11,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -12]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -900,
  'call_rel['op1[imm]].to_nat,
  -902,
  'call_rel['op1[imm]].to_nat,
  -904,
  'call_rel['op1[imm]].to_nat,
  -906,
  'assert_eq['dst[ap] === 'res['op1[ap+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  15,
  'call_rel['op1[imm]].to_nat,
  -1210,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  1,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  3,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  4,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  5,
  'assert_eq[op0:='op0[fp+ -11], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -18]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -23], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -21], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -19], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -17], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -15], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -13], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -882,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  16,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -9], 'dst[ap] === 'res[op0+ 'op1[fp]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  -4,
  'call_rel['op1[imm]].to_nat,
  -91,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.ec_mul_by_uint256 code definition -/

def code_ec_mul_by_uint256 : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  3,
  'call_rel['op1[imm]].to_nat,
  -709,
  'assert_eq['dst[fp] === 'res['op1[ap+ -1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -11]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  247,
  'assert_eq['dst[ap] === 'res['op1[fp+ 1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  15,
  'call_rel['op1[imm]].to_nat,
  -713,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  1,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  3,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  4,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  5,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -18]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -18], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -16], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -14], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -12], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -10], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -8], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  124,
  'call_rel['op1[imm]].to_nat,
  424,
  'assert_eq['dst[ap+ -1] === 'res['op1[fp+ -3]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -9]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  124,
  'call_rel['op1[imm]].to_nat,
  409,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  16,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[ap+ -2]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[fp+ -4] === 'res[op0+ 'op1[fp+ 2]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -10]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 2]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  15,
  'call_rel['op1[imm]].to_nat,
  -779,
  'assert_eq['dst[ap] === 'res['op1[ap+ -28]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -28]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -28]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -28]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -28]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -28]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -489,
  'call_rel['op1[imm]].to_nat,
  -491,
  'call_rel['op1[imm]].to_nat,
  -493,
  'call_rel['op1[imm]].to_nat,
  -495,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  1,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  2,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  3,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  4,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  6,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  5,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -24]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -23], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -21], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -19], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -17], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -15], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -13], 'dst[ap] === 'res['op1[op0]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -378,
  'ret[].to_nat
]

/- function starkware.cairo.common.secp256r1.ec.try_get_point_from_x code definition -/

def code_try_get_point_from_x : list F := [
  'ap+=['res['op1[imm]]].to_nat,
  10,
  'assert_eq['dst[ap] === 'res['op1[fp+ -8]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -852,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -788,
  'assert_eq['dst[ap] === 'res['op1[ap+ -33]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -4]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -679,
  'assert_eq['dst[ap] === 'res['op1[fp+ -7]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ -5]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -6]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -840,
  'assert_eq['dst[fp] === 'res['op1[ap+ -3]]].to_nat,
  'assert_eq['dst[fp+ 1] === 'res['op1[ap+ -2]]].to_nat,
  'assert_eq['dst[fp+ 2] === 'res['op1[ap+ -1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -43]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -859,
  'assert_eq['dst[fp+ 3] === 'res['op1[ap+ -3]]].to_nat,
  'assert_eq['dst[fp+ 4] === 'res['op1[ap+ -2]]].to_nat,
  'assert_eq['dst[fp+ 5] === 'res['op1[ap+ -1]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 5]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -816,
  'assert_eq['dst[fp+ 6] === 'res['op1[ap+ -3]]].to_nat,
  'assert_eq['dst[fp+ 7] === 'res['op1[ap+ -2]]].to_nat,
  'assert_eq['dst[fp+ 8] === 'res['op1[ap+ -1]]].to_nat,
  'jnz_rel['op1[imm], 'dst[fp+ 9]].to_nat,
  29,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  23805269282153275520606283,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -6]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  64478498050055519801623345,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  6858709101169761702330043,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -48]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -10], 'dst[ap] === 'res[op0+ 'op1[fp+ 6]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -7], 'dst[ap] === 'res[op0+ 'op1[fp+ 7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -4], 'dst[ap] === 'res[op0+ 'op1[fp+ 8]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -800,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  0,
  'ret[].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -36]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 3]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[fp+ 5]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -726,
  'assert_eq[op0:='op0[fp+ 3], 'dst[ap] === 'res[op0+ 'op1[fp+ -4]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -2]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -2], 'dst[ap] === 'res[op0* 'op1[imm]];ap++].to_nat,
  -1809251394333065606848661391547535052811553607665798349986546028067936010240,
  'call_rel['op1[imm]].to_nat,
  -929,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  23805269282153275520606283,
  'assert_eq[op0:='op0[fp], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -6]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  64478498050055519801623345,
  'assert_eq[op0:='op0[fp+ 1], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  -3,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0* 'op1[fp+ -5]];ap++].to_nat,
  'assert_eq[op0:='op0[ap+ -1], 'dst[ap] === 'res[op0+ 'op1[imm]];ap++].to_nat,
  6858709101169761702330043,
  'assert_eq[op0:='op0[fp+ 2], 'dst[ap] === 'res[op0+ 'op1[ap+ -1]];ap++].to_nat,
  'assert_eq['dst[ap] === 'res['op1[ap+ -13]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -10] === 'res[op0+ 'op1[fp+ 6]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -7] === 'res[op0+ 'op1[fp+ 7]];ap++].to_nat,
  'assert_eq[op0:='op0[ap], 'dst[ap+ -4] === 'res[op0+ 'op1[fp+ 8]];ap++].to_nat,
  'call_rel['op1[imm]].to_nat,
  -839,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -7] === 'res['op1[op0]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -6] === 'res['op1[op0+ 1]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ -5] === 'res['op1[op0+ 2]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ 3] === 'res['op1[op0+ 3]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ 4] === 'res['op1[op0+ 4]]].to_nat,
  'assert_eq[op0:='op0[fp+ -3], 'dst[fp+ 5] === 'res['op1[op0+ 5]]].to_nat,
  'assert_eq['dst[ap] === 'res['op1[imm]];ap++].to_nat,
  1,
  'ret[].to_nat
]

